#!/bin/bash

declare -g WEBROOT="$(pwd)"
declare -g LOGFILE="/tmp/lazy.log"

declare -gr CONTENT=0
declare -gr STATUSCODE=4
declare -gr FILE=5
declare -gr CRLF="$(printf '\r\n')"

send() {
	local buf clen ctype status msg

	buf="$1"
	status=${2:-200}
	msg=${3:-OK}
	ctype="${4:-text/html; charset-utf-8}"
	clen=$(echo -n "$buf" |wc -c)

	printf "HTTP/1.1 %s %s\r\n" "$status" "$msg"
	printf "Content-Length: %s\r\n" "$clen"
	printf "Content-Type: %s\r\n" "$ctype"
	printf "Connection: close\r\n"
	printf "Date: %s\r\n" "$(date)"
	printf "Server: lazy/0.1\r\n"
	printf "\r\n"
	printf "%s" "$buf"
}

sendsc() {
	case $1 in
	404) send "Not Found: ${header[Resource]}" 404 "Not Found";;
	*) send "Internal Server Error" 500 "Internal Server Error";;
	esac
}

serve() {
	header=$1
	case "${header[Method]}" in
	HEAD) send "";;
	GET)
		ret="$(cd "$WEBROOT";. main)"
		rv=$?
		case $rv in

		$CONTENT) send "$ret";;
		$STATUSCODE) sendsc "$ret";;
		$FILE)
			ret="${WEBROOT}/${ret}"
			if [ ! -f "$ret" ]; then
				sendsc 404
				break
			fi
			mime="$(mimetype "$ret" |cut -d: -f2 |tr -d ' ')"
			send "$(cat "$ret")" 200 "OK" "$mime"
			;;

		esac
		;;
	*) send "Server Error: unknown method ${header[Method]}." 500 "Internal Server Error";;
	esac
}

newreq() {
	local -A header
	local comp k v

	while read -r line; do
		if [ -z "${header[Method]}" ]; then
			header["Method"]="$(echo -n $line |cut -d' ' -f1)"
			header["Resource"]="$(echo -n $line |cut -d' ' -f2)"
			header["Http-Version"]="$(echo -n $(echo $line |cut -d' ' -f3) | cut -d'/' -f2)"
			continue
		fi

		if [ "$line" != "$CRLF" ]; then
			k="$(echo -n $line |cut -d: -f1)"
			v="$(echo -n $line |cut -d: -f2-)"
			header[$k]="$v"
		else
			serve "$header"
			header=() # reset
		fi
	done < "$1"
}

# needed?
urlencode() {
	echo -n "$1" |awk -niord '{printf RT?$0chr("0x"substr(RT,2)):$0}' RS=%..
}

urldecode() {
	printf "%b" "$(echo -n $1 |sed 's/%\([0-9A-Fa-f][0-9A-Fa-f]\)/\\x\1/g;')";
}

detecthost() {
	iface="$(ifconfig -s |cut -d' ' -f1 |grep -v 'Iface\|lo' |head -1)"
	host="$(ifconfig $iface |grep inet: |cut -d: -f2 |cut -d' ' -f1)"
	[ -z "$host" ] && host="localhost"
	echo -n "$host"
}

cleanup() {
	for FN in $@; do
		[ -e "$FN" ] && rm -f "$FN"
	done
}

main() {
	local -r host="${1:-$(detecthost)}"
	local -r port="${2:-1234}"
	local -r fifo="$(mktemp -u /tmp/lazy.fifo.XXXXX)"
	local -r pids="$(mktemp -u /tmp/lazy.pids.XXXXX)"

	[ -n "$3" ] && WEBROOT=$3
	if [ ! -d "$WEBROOT" ]; then
		echo "${0}: ${WEBROOT}: wrong path"
		exit -1
	fi

	trap "cleanup '$fifo' '$pids'" EXIT INT TERM HUP

	if [ ! -f "${WEBROOT}/main" ]; then
		echo "$0: ${WEBROOT}: missing main file"
		exit -2
	fi

	mkfifo -m 600 "$fifo"

	echo "Running on ${host}:${port}/${WEBROOT}..."
	nc -kl "$host" $port \
		0< <(echo -n " $BASHPID " >> "$pids"; while : ; do newreq "$fifo" ; done) \
		1> >(echo -n " $BASHPID " >> "$pids"; while : ; do cat - > "$fifo" ; done) \
		2>> "$LOGFILE"
	rv=$?

	if [ $rv -ne 0 -a $rv -ne 130 ]; then
		echo "$0: an error occurred."
		kill $(cat $pids)
		rm -f "$pids"
		exit 1
	fi

	echo
}

main "$@"
